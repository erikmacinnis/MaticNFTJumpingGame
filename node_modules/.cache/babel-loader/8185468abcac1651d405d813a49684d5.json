{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainProjects/jumping_game/src/App.js\",\n    _s = $RefreshSig$();\n\n// Todo \n// give the app a nice background and feel\n// Handle the block null value issue in Block file\n// Document the rest\n// change the alert and confirm buttons with https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n// test the game a little\n// put on GitHub and host it on web with https://fleek.co/\nimport React, { useEffect, useState, useRef } from 'react';\nimport Floor from './components/Floor.js';\nimport Block from './components/Block.js';\nimport TileFrame from './components/TileFrame.js';\nimport Score from './components/Score.js';\nimport NftPage from './components/NftPage.js';\nimport factory from './blockchain/factory.js';\nimport './css/stylesheet.css';\nimport { ethers } from 'ethers';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const button = useRef(); // changing current NFT listener\n\n  const [nftChange, setNftChange] = useState(null);\n  const [nftPage, setNftPage] = useState(false);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [worldHighScore, setWorldHighScore] = useState(0);\n  const [worldHighScoreHolder, setWorldHighScoreHolder] = useState(null);\n  const [ended, setEnded] = useState(true);\n  const [height, setHeight] = useState(100);\n  const [bottom, setBottom] = useState(false); // tile position of first tile of game\n\n  const [initialTilePos, setInitialTilePos] = useState(0); // tile position of next incoming tile\n\n  const [firstTilePos, setFirstTilePos] = useState(0);\n  const [gameContract, setGameContract] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [disconnected, setDisconnected] = useState(false); // reloads the game every new high score to update score and at the start of the game\n\n  useEffect(() => {\n    if (score !== 0) {\n      loadGame();\n    }\n  }, [highScore]);\n  useEffect(() => {\n    loadGame();\n  }, []);\n  useEffect(() => {\n    if (!ended) {\n      startGame();\n    }\n  }, [ended]);\n  useEffect(() => {\n    if (connected) {\n      button.current.innerHTML = \"Disconnect\";\n    } else {\n      button.current.innerHTML = \"Connect to MetaMask\";\n    }\n  }, [connected]);\n  useEffect(() => {\n    detectAccountChange();\n  }, []);\n\n  const detectAccountChange = () => {\n    window.ethereum.on(\"disconnect\", () => {\n      console.log(\"disconnected\");\n      setDisconnected(true);\n      setConnected(false);\n      loadGame();\n    });\n    window.ethereum.on(\"accountsChanged\", () => {\n      console.log(\"accountschanged\");\n      setDisconnected(true);\n      setConnected(false);\n      loadGame();\n    });\n    window.ethereum.on(\"chainChanged\", () => {\n      console.log(\"chainchanged\");\n      loadGame();\n    });\n  };\n\n  const loadGame = async () => {\n    let signer;\n    console.log(\"loadgame\");\n    console.log(disconnected);\n\n    if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n      console.log(\"Inside first\"); // A Web3Provider wraps a standard Web3 provider, which is\n      // what MetaMask injects as window.ethereum into each page\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log(provider); // MetaMask requires requesting permission to connect users accounts\n\n      await provider.send(\"eth_requestAccounts\", []); // The MetaMask plugin also allows signing transactions to\n      // send ether and pay to change state within the blockchain.\n      // For this, you need the account signer...\n\n      signer = provider.getSigner();\n      console.log(\"Account signer:\", signer);\n      const chainId = 80001;\n\n      if (window.ethereum.networkVersion !== chainId) {\n        console.log(\"inside\");\n\n        try {\n          console.log(\"0x\" + chainId.toString(16));\n          await provider.send('wallet_switchEthereumChain', [{\n            chainId: \"0x\" + chainId.toString(16)\n          }]);\n        } catch (err) {\n          console.log(err.code);\n\n          if (err.code === 4902) {\n            console.log(\"0x\" + chainId.toString(16));\n            await provider.send('wallet_addEthereumChain', [{\n              chainName: 'Polygon Testnet Mumbai',\n              chainId: \"0x\" + chainId.toString(16),\n              nativeCurrency: {\n                name: 'tMATIC',\n                decimals: 18,\n                symbol: 'tMATIC'\n              },\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com']\n            }]);\n          }\n        }\n      }\n\n      console.log(\"stage\");\n      console.log(window.ethereum.isConnected());\n      console.log(window.ethereum.networkVersion = 80001);\n\n      if (window.ethereum.isConnected() && window.ethereum.networkVersion === chainId) {\n        console.log(\"setting connected\");\n        setConnected(true);\n        setDisconnected(false);\n        const walletAddress = await signer.getAddress();\n        const ERC20_ABI = ['constructor()', 'function highScore() public view returns (uint256)', 'function mint(string memory tokenURI, uint256 tokenId) public returns (uint256)', 'function setNewHighScore(uint256 newHighScore) external', 'function ownerOf(uint256 tokenId) public view returns (address)']; // checking if the wallet has created its own game smart contract\n\n        if (!(await factory.isPlayedBefore(walletAddress))) {\n          // sets nft block to basic block\n          localStorage.setItem(\"current block\", 0);\n          const tx = await factory.newJumpingGame();\n          tx.wait();\n          setGameContract(gameContract);\n        } // setting all aspects of smart contract to variables \n\n\n        const gameAddress = await factory.playersJumpingGameAddress(walletAddress);\n        const gameContract = new ethers.Contract(gameAddress, ERC20_ABI, signer);\n        setGameContract(gameContract);\n        const tempHighScore = await gameContract.highScore();\n        setHighScore(ethers.BigNumber.from(tempHighScore).toNumber());\n        const tempWorldHighScore = await factory.worldHighScore();\n        setWorldHighScore(ethers.BigNumber.from(tempWorldHighScore).toNumber());\n        const tempWorldHighScoreHolder = await factory.worldHighScoreHolder();\n        setWorldHighScoreHolder(ethers.BigNumber.from(tempWorldHighScoreHolder).toHexString());\n      } else {\n        // If you don't specify a //url//, Ethers connects to the default \n        // (i.e. ``http:/\\/localhost:8545``)\n        setDisconnected(true);\n        setConnected(false);\n        setWorldHighScore(0);\n        setHighScore(0);\n        setWorldHighScoreHolder(\"\");\n      }\n    } else {\n      if (typeof window === \"undefined\" && typeof window.ethereum === \"undefined\") {\n        Swal.fire({\n          title: 'You do not have MetaMask installed',\n          text: `Download MetaMask at https://metamask.io/download/`,\n          icon: 'info'\n        });\n      } // If you don't specify a //url//, Ethers connects to the default \n      // (i.e. ``http:/\\/localhost:8545``)\n\n\n      setDisconnected(true);\n      setConnected(false);\n      setWorldHighScore(0);\n      setHighScore(0);\n      setWorldHighScoreHolder(\"\");\n    }\n  };\n\n  const startGame = async () => {\n    let countdown, textnode;\n    const timer1 = setTimeout(run, 1000);\n\n    function run() {\n      countdown = document.createElement(\"div\");\n      countdown.className = \"number\";\n      textnode = document.createTextNode(\"3\");\n      countdown.appendChild(textnode);\n      document.getElementById(\"container\").appendChild(countdown);\n      clearInterval(timer1);\n    }\n\n    const timer2 = setTimeout(run2, 2000);\n\n    function run2() {\n      textnode.nodeValue = \"2\";\n      clearInterval(timer2);\n    }\n\n    const timer3 = setTimeout(run3, 3000);\n\n    function run3() {\n      textnode.nodeValue = \"1\";\n      clearInterval(timer3);\n    }\n\n    const start = setTimeout(bot, 4000);\n\n    function bot() {\n      // triggers the start of the game in TileFram and Block pages\n      setBottom(true);\n      countdown.remove();\n      clearInterval(start);\n    }\n  };\n\n  const connectButton = async () => {\n    console.log(\"connected button\");\n    console.log(connected);\n    console.log(disconnected);\n\n    if (connected) {\n      setDisconnected(true);\n      setConnected(false);\n      setDisconnected(true);\n      setConnected(false);\n      setWorldHighScore(0);\n      setHighScore(0);\n      setWorldHighScoreHolder(\"\");\n    } else {\n      loadGame();\n    }\n  }; // game page\n\n\n  if (!nftPage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            ref: button,\n            className: \"ui pink basic button\",\n            onClick: e => connectButton(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui container\",\n          id: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Score, {\n            connected: connected,\n            setHighScore: setHighScore,\n            setWorldHighScore: setWorldHighScore,\n            setWorldHighScoreHolder: setWorldHighScoreHolder,\n            gameContract: gameContract,\n            highScore: highScore,\n            worldHighScore: worldHighScore,\n            worldHighScoreHolder: worldHighScoreHolder,\n            setNftPage: setNftPage,\n            setScore: setScore,\n            setEnded: setEnded,\n            setHeight: setHeight,\n            setBottom: setBottom,\n            score: score,\n            ended: ended,\n            bottom: bottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Floor, {\n            setScore: setScore,\n            setHighScore: setHighScore,\n            setEnded: setEnded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TileFrame, {\n            nftPage: nftPage,\n            bottom: bottom,\n            setInitialTilePos: setInitialTilePos,\n            setFirstTilePos: setFirstTilePos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Block, {\n            nftChange: nftChange,\n            score: score,\n            setScore: setScore,\n            setEnded: setEnded,\n            height: height,\n            setHeight: setHeight,\n            bottom: bottom,\n            setBottom: setBottom,\n            initialTilePos: initialTilePos,\n            firstTilePos: firstTilePos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)\n    }, void 0, false); // nft page\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        style: {\n          backgroundColor: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NftPage, {\n          gameContract: gameContract,\n          setNftPage: setNftPage,\n          highScore: highScore,\n          setNftChange: setNftChange,\n          nftChange: nftChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(App, \"wABArQPlcRdNQ925thISlwTe6bY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Floor","Block","TileFrame","Score","NftPage","factory","ethers","Swal","App","button","nftChange","setNftChange","nftPage","setNftPage","score","setScore","highScore","setHighScore","worldHighScore","setWorldHighScore","worldHighScoreHolder","setWorldHighScoreHolder","ended","setEnded","height","setHeight","bottom","setBottom","initialTilePos","setInitialTilePos","firstTilePos","setFirstTilePos","gameContract","setGameContract","connected","setConnected","disconnected","setDisconnected","loadGame","startGame","current","innerHTML","detectAccountChange","window","ethereum","on","console","log","signer","provider","providers","Web3Provider","send","getSigner","chainId","networkVersion","toString","err","code","chainName","nativeCurrency","name","decimals","symbol","rpcUrls","isConnected","walletAddress","getAddress","ERC20_ABI","isPlayedBefore","localStorage","setItem","tx","newJumpingGame","wait","gameAddress","playersJumpingGameAddress","Contract","tempHighScore","BigNumber","from","toNumber","tempWorldHighScore","tempWorldHighScoreHolder","toHexString","fire","title","text","icon","countdown","textnode","timer1","setTimeout","run","document","createElement","className","createTextNode","appendChild","getElementById","clearInterval","timer2","run2","nodeValue","timer3","run3","start","bot","remove","connectButton","e","backgroundColor"],"sources":["/Users/erikmacinnis/Desktop/BlockChainProjects/jumping_game/src/App.js"],"sourcesContent":["// Todo \n// give the app a nice background and feel\n// Handle the block null value issue in Block file\n// Document the rest\n// change the alert and confirm buttons with https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n// test the game a little\n// put on GitHub and host it on web with https://fleek.co/\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport Floor from './components/Floor.js';\nimport Block from './components/Block.js';\nimport TileFrame from './components/TileFrame.js';\nimport Score from './components/Score.js';\nimport NftPage from './components/NftPage.js';\nimport factory from './blockchain/factory.js';\nimport './css/stylesheet.css';\nimport { ethers } from 'ethers';\nimport Swal from 'sweetalert2';\n\nconst App = () => {\n\n    const button = useRef();\n\n    // changing current NFT listener\n    const [nftChange, setNftChange] = useState(null);\n    const [nftPage, setNftPage] = useState(false);\n    const [score, setScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [worldHighScore, setWorldHighScore] = useState(0);\n    const [worldHighScoreHolder, setWorldHighScoreHolder] = useState(null);\n    const [ended, setEnded] = useState(true);\n    const [height, setHeight] = useState(100);\n    const [bottom, setBottom] = useState(false);\n    // tile position of first tile of game\n    const [initialTilePos, setInitialTilePos] = useState(0);\n    // tile position of next incoming tile\n    const [firstTilePos, setFirstTilePos] = useState(0);\n    const [gameContract, setGameContract] = useState(null);\n    const [connected, setConnected] = useState(false);\n    const [disconnected, setDisconnected] = useState(false);\n\n    // reloads the game every new high score to update score and at the start of the game\n    useEffect( () => {\n        if (score !== 0) {\n            loadGame();\n        }\n    }, [highScore])\n\n    useEffect( () => {\n        loadGame();\n    }, [])\n\n    useEffect( () => {\n        if (!ended) {\n            startGame();\n        }\n    }, [ended]);\n\n    useEffect(() => {\n        if (connected){\n            button.current.innerHTML = \"Disconnect\";\n        }\n        else {\n            button.current.innerHTML = \"Connect to MetaMask\";\n        }\n    }, [connected])\n\n    useEffect(() => {\n        detectAccountChange();\n    }, [])\n\n    const detectAccountChange = () => {\n        window.ethereum.on(\"disconnect\", () => {\n            console.log(\"disconnected\");\n            setDisconnected(true);\n            setConnected(false);\n            loadGame();\n        })\n        window.ethereum.on(\"accountsChanged\", () => {\n            console.log(\"accountschanged\");\n            setDisconnected(true);\n            setConnected(false);\n            loadGame();\n          });\n\n        window.ethereum.on(\"chainChanged\", () => {\n            console.log(\"chainchanged\")\n            loadGame();\n        })\n    }\n\n\n    const loadGame = async() => {\n        let signer;\n        console.log(\"loadgame\");\n        console.log(disconnected);\n        if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n            console.log(\"Inside first\");\n            // A Web3Provider wraps a standard Web3 provider, which is\n            // what MetaMask injects as window.ethereum into each page\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            console.log(provider);\n            // MetaMask requires requesting permission to connect users accounts\n            await provider.send(\"eth_requestAccounts\", []);\n\n            // The MetaMask plugin also allows signing transactions to\n            // send ether and pay to change state within the blockchain.\n            // For this, you need the account signer...\n            signer = provider.getSigner()\n\n            console.log(\"Account signer:\", signer);\n\n            const chainId = 80001;\n\n            if (window.ethereum.networkVersion !== chainId) {\n                console.log(\"inside\");\n                try {\n                    console.log(\"0x\" + chainId.toString(16));\n                    await provider.send('wallet_switchEthereumChain', [{chainId: \"0x\" + chainId.toString(16)}])\n                }\n                catch (err) {\n\n                    console.log(err.code);\n                    if (err.code === 4902) {\n                        console.log(\"0x\" + chainId.toString(16));\n                        await provider.send('wallet_addEthereumChain', [{chainName: 'Polygon Testnet Mumbai', chainId: \"0x\" + chainId.toString(16), nativeCurrency: { name: 'tMATIC', decimals: 18, symbol: 'tMATIC' }, rpcUrls: ['https://rpc-mumbai.maticvigil.com']}])\n                    } \n                }\n            }\n            console.log(\"stage\");\n            console.log(window.ethereum.isConnected());\n            console.log(window.ethereum.networkVersion = 80001);\n            if (window.ethereum.isConnected() && window.ethereum.networkVersion === chainId) {\n                \n                console.log(\"setting connected\");\n                setConnected(true);\n                setDisconnected(false);\n\n                const walletAddress = await signer.getAddress();\n                const ERC20_ABI = [\n                    'constructor()',\n                    'function highScore() public view returns (uint256)',\n                    'function mint(string memory tokenURI, uint256 tokenId) public returns (uint256)',\n                    'function setNewHighScore(uint256 newHighScore) external',\n                    'function ownerOf(uint256 tokenId) public view returns (address)'\n                ];\n                // checking if the wallet has created its own game smart contract\n                if (!(await factory.isPlayedBefore(walletAddress))){\n                    // sets nft block to basic block\n                    localStorage.setItem(\"current block\", 0);\n                    const tx = await factory.newJumpingGame();\n                    tx.wait();\n                    setGameContract(gameContract);\n                }\n                // setting all aspects of smart contract to variables \n                const gameAddress = await factory.playersJumpingGameAddress(walletAddress);\n                const gameContract = new ethers.Contract(gameAddress, ERC20_ABI, signer);\n                setGameContract(gameContract);\n                const tempHighScore = await gameContract.highScore();\n                setHighScore(ethers.BigNumber.from(tempHighScore).toNumber());\n                const tempWorldHighScore = await factory.worldHighScore();\n                setWorldHighScore(ethers.BigNumber.from(tempWorldHighScore).toNumber());\n                const tempWorldHighScoreHolder = await factory.worldHighScoreHolder()\n                setWorldHighScoreHolder(ethers.BigNumber.from(tempWorldHighScoreHolder).toHexString());\n            }\n            else {\n                // If you don't specify a //url//, Ethers connects to the default \n                // (i.e. ``http:/\\/localhost:8545``)\n                setDisconnected(true);\n                setConnected(false);\n                setWorldHighScore(0);\n                setHighScore(0);\n                setWorldHighScoreHolder(\"\"); \n            }\n\n        } \n        else {\n        if (typeof window === \"undefined\" && typeof window.ethereum === \"undefined\"){\n            Swal.fire({\n                title: 'You do not have MetaMask installed',\n                text: `Download MetaMask at https://metamask.io/download/`,\n                icon: 'info',\n            })\n        }\n            // If you don't specify a //url//, Ethers connects to the default \n            // (i.e. ``http:/\\/localhost:8545``)\n            setDisconnected(true);\n            setConnected(false);\n            setWorldHighScore(0);\n            setHighScore(0);\n            setWorldHighScoreHolder(\"\"); \n        }\n    }\n\n    const startGame = async() => {\n\n        let countdown, textnode;\n        const timer1 = setTimeout( run, 1000);\n        function run() {\n            countdown = document.createElement(\"div\");\n            countdown.className = \"number\";\n            textnode = document.createTextNode(\"3\");\n            countdown.appendChild(textnode);\n            document.getElementById(\"container\").appendChild(countdown);\n            clearInterval(timer1);\n        }\n        const timer2 = setTimeout( run2, 2000);\n        function run2() {\n            textnode.nodeValue = \"2\";\n            clearInterval(timer2);\n        }\n        const timer3 = setTimeout( run3, 3000);\n        function run3() {\n            textnode.nodeValue = \"1\";\n            \n            clearInterval(timer3);\n        }\n        const start = setTimeout(bot, 4000);\n        function bot() {\n            // triggers the start of the game in TileFram and Block pages\n            setBottom(true);\n            countdown.remove();\n            clearInterval(start);\n        }\n    }\n\n\n\n    const connectButton = async() => {\n        console.log(\"connected button\");\n        console.log(connected);\n        console.log(disconnected);\n        if (connected) {\n            setDisconnected(true);\n            setConnected(false);\n            setDisconnected(true);\n            setConnected(false);\n            setWorldHighScore(0);\n            setHighScore(0);\n            setWorldHighScoreHolder(\"\"); \n        }\n        else {\n            loadGame();\n        }\n    }\n\n    // game page\n    if (!nftPage) {\n        return (\n            <>\n                {/* <button className=\"ui green basic button\" onClick={}>\n\n                </button> */}\n                <div className=\"background\">\n                    <div className=\"button\"> \n                    <button \n                        ref={button} \n                        className=\"ui pink basic button\" \n                        onClick={e => connectButton(e)}>\n                    </button>\n                    </div>\n                    <div className=\"ui container\" id=\"container\">\n                        <Score connected={connected} setHighScore={setHighScore} setWorldHighScore={setWorldHighScore} setWorldHighScoreHolder={setWorldHighScoreHolder} gameContract={gameContract} highScore={highScore} worldHighScore={worldHighScore} worldHighScoreHolder={worldHighScoreHolder} setNftPage={setNftPage} setScore={setScore} setEnded={setEnded} setHeight={setHeight} setBottom={setBottom} score={score} ended={ended} bottom={bottom}/>\n                        <Floor setScore={setScore} setHighScore={setHighScore} setEnded={setEnded}/>\n                        <TileFrame nftPage={nftPage} bottom={bottom} setInitialTilePos={setInitialTilePos} setFirstTilePos={setFirstTilePos}/>\n                        <Block nftChange={nftChange} score={score} setScore={setScore} setEnded={setEnded} height={height} setHeight={setHeight} bottom={bottom} setBottom={setBottom} initialTilePos={initialTilePos} firstTilePos={firstTilePos}/>\n                    </div>\n                </div>\n           </>\n        )\n        // nft page\n    } else {\n        return (\n            <div className=\"background\">\n                <div className=\"ui container\" style={{backgroundColor: \"black\"}}>\n                    <NftPage gameContract={gameContract} setNftPage={setNftPage} highScore={highScore} setNftChange={setNftChange} nftChange={nftChange}/>\n                </div>\n            </div>\n        )\n    }\n    \n\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}