{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainProjects/jumping_game/src/components/Block.js\",\n    _s = $RefreshSig$();\n\nimport { clear } from '@testing-library/user-event/dist/clear';\nimport React, { useEffect, useRef } from 'react';\nimport '../css/stylesheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Block = _ref => {\n  _s();\n\n  let {\n    height,\n    setHeight,\n    setJumped\n  } = _ref;\n  const blockRef = useRef();\n  let pixelHeight = height + \"px\";\n  useEffect(() => {}, [pixelHeight]);\n\n  const jump = () => {\n    setBottom(false);\n    const jumpHeight = 200;\n    let currentHeight = height;\n    const startingHeight = height;\n    const timerUp = setInterval(jumpFrame, 50);\n\n    function jumpFrame() {\n      if (currentHeight - startingHeight >= jumpHeight) {\n        clearInterval(timerUp);\n        setHeight(currentHeight);\n        down();\n      } else {\n        currentHeight += 10;\n        pixelHeight = currentHeight + \"px\";\n        console.log(pixelHeight);\n        blockRef.current.style.bottom = pixelHeight;\n      }\n    }\n\n    const down = () => {\n      const timerDown = setInterval(downFrame, 50);\n\n      function downFrame() {\n        if (currentHeight <= 100) {\n          clearInterval(timerDown);\n          setHeight(currentHeight);\n          setBottom(true);\n        } else {\n          currentHeight -= 10;\n          pixelHeight = currentHeight + \"px\";\n          console.log(pixelHeight);\n          blockRef.current.style.bottom = pixelHeight;\n        }\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: blockRef,\n    className: \"block\",\n    onClick: () => {\n      jump();\n    },\n    style: {\n      bottom: pixelHeight\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Block, \"eLuEsfpxkDUNZez9d63/TSgCubA=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"names":["clear","React","useEffect","useRef","Block","height","setHeight","setJumped","blockRef","pixelHeight","jump","setBottom","jumpHeight","currentHeight","startingHeight","timerUp","setInterval","jumpFrame","clearInterval","down","console","log","current","style","bottom","timerDown","downFrame"],"sources":["/Users/erikmacinnis/Desktop/BlockChainProjects/jumping_game/src/components/Block.js"],"sourcesContent":["import { clear } from '@testing-library/user-event/dist/clear';\nimport React, {useEffect, useRef} from 'react';\nimport '../css/stylesheet.css';\n\nconst Block = ({height, setHeight, setJumped}) => {\n\n    const blockRef = useRef();\n    let pixelHeight = height + \"px\";\n\n    useEffect( () => {\n    }, [pixelHeight])\n\n    const jump = () => {\n        setBottom(false);\n        const jumpHeight = 200;\n        let currentHeight = height;\n        const startingHeight = height;\n        const timerUp = setInterval(jumpFrame, 50);\n        function jumpFrame() {\n            if (currentHeight - startingHeight >= jumpHeight) {\n                clearInterval(timerUp);\n                setHeight(currentHeight);\n                down();\n            }\n            else{\n                currentHeight += 10;\n                pixelHeight = currentHeight + \"px\"\n                console.log(pixelHeight);\n                blockRef.current.style.bottom = pixelHeight;\n            }\n        }\n\n        const down = () => {\n            const timerDown = setInterval(downFrame, 50);\n            function downFrame() {\n                if (currentHeight <= 100){\n                    clearInterval(timerDown);\n                    setHeight(currentHeight);\n                    setBottom(true);\n                }\n                else {\n                    currentHeight -= 10;\n                    pixelHeight = currentHeight + \"px\"\n                    console.log(pixelHeight);\n                    blockRef.current.style.bottom = pixelHeight;\n                }\n            }\n        }\n    }\n\n    return (\n        <div ref={blockRef} className=\"block\" onClick={() => {jump()}} style={{bottom: pixelHeight}}>\n            \n        </div>\n    )\n\n}\n\nexport default Block;\n"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,wCAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAO,uBAAP;;;AAEA,MAAMC,KAAK,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAACC,MAAD;IAASC,SAAT;IAAoBC;EAApB,CAAmC;EAE9C,MAAMC,QAAQ,GAAGL,MAAM,EAAvB;EACA,IAAIM,WAAW,GAAGJ,MAAM,GAAG,IAA3B;EAEAH,SAAS,CAAE,MAAM,CAChB,CADQ,EACN,CAACO,WAAD,CADM,CAAT;;EAGA,MAAMC,IAAI,GAAG,MAAM;IACfC,SAAS,CAAC,KAAD,CAAT;IACA,MAAMC,UAAU,GAAG,GAAnB;IACA,IAAIC,aAAa,GAAGR,MAApB;IACA,MAAMS,cAAc,GAAGT,MAAvB;IACA,MAAMU,OAAO,GAAGC,WAAW,CAACC,SAAD,EAAY,EAAZ,CAA3B;;IACA,SAASA,SAAT,GAAqB;MACjB,IAAIJ,aAAa,GAAGC,cAAhB,IAAkCF,UAAtC,EAAkD;QAC9CM,aAAa,CAACH,OAAD,CAAb;QACAT,SAAS,CAACO,aAAD,CAAT;QACAM,IAAI;MACP,CAJD,MAKI;QACAN,aAAa,IAAI,EAAjB;QACAJ,WAAW,GAAGI,aAAa,GAAG,IAA9B;QACAO,OAAO,CAACC,GAAR,CAAYZ,WAAZ;QACAD,QAAQ,CAACc,OAAT,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgCf,WAAhC;MACH;IACJ;;IAED,MAAMU,IAAI,GAAG,MAAM;MACf,MAAMM,SAAS,GAAGT,WAAW,CAACU,SAAD,EAAY,EAAZ,CAA7B;;MACA,SAASA,SAAT,GAAqB;QACjB,IAAIb,aAAa,IAAI,GAArB,EAAyB;UACrBK,aAAa,CAACO,SAAD,CAAb;UACAnB,SAAS,CAACO,aAAD,CAAT;UACAF,SAAS,CAAC,IAAD,CAAT;QACH,CAJD,MAKK;UACDE,aAAa,IAAI,EAAjB;UACAJ,WAAW,GAAGI,aAAa,GAAG,IAA9B;UACAO,OAAO,CAACC,GAAR,CAAYZ,WAAZ;UACAD,QAAQ,CAACc,OAAT,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgCf,WAAhC;QACH;MACJ;IACJ,CAfD;EAgBH,CApCD;;EAsCA,oBACI;IAAK,GAAG,EAAED,QAAV;IAAoB,SAAS,EAAC,OAA9B;IAAsC,OAAO,EAAE,MAAM;MAACE,IAAI;IAAG,CAA7D;IAA+D,KAAK,EAAE;MAACc,MAAM,EAAEf;IAAT;EAAtE;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CApDD;;GAAML,K;;KAAAA,K;AAsDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}