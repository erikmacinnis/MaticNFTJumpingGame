{"ast":null,"code":"import signer from './ethers.js';\nimport { ethers } from \"ethers\";\nconst address = \"0x03feaDDD15b676Ac41B4B1846D9f02a9E4409dCc\";\nconsole.log(\"factory\");\nconst ERC20_ABI = ['function worldHighScore() public view returns (uint256)', 'function worldHighScoreHolder() public view returns (address)', 'function playersJumpingGame(address) public view returns (address)', 'function isPlayedBefore(address) public view returns (bool)', 'function newJumpingGame() external', 'function updateHighScore(uint) external'];\nconst contract = new ethers.Contract(address, ERC20_ABI, signer);\nexport default contract;","map":{"version":3,"names":["signer","ethers","address","console","log","ERC20_ABI","contract","Contract"],"sources":["/Users/erikmacinnis/Desktop/BlockChainProjects/jumping_game/src/blockchain/factory.js"],"sourcesContent":["import signer from './ethers.js';\nimport { ethers } from \"ethers\";\n\nconst address = \"0x03feaDDD15b676Ac41B4B1846D9f02a9E4409dCc\";\nconsole.log(\"factory\");\nconst ERC20_ABI = [\n    'function worldHighScore() public view returns (uint256)',\n    'function worldHighScoreHolder() public view returns (address)',\n    'function playersJumpingGame(address) public view returns (address)',\n    'function isPlayedBefore(address) public view returns (bool)',\n    'function newJumpingGame() external',\n    'function updateHighScore(uint) external',\n];\n\nconst contract = new ethers.Contract(address, ERC20_ABI, signer);\n\nexport default contract;\n\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,OAAO,GAAG,4CAAhB;AACAC,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,MAAMC,SAAS,GAAG,CACd,yDADc,EAEd,+DAFc,EAGd,oEAHc,EAId,6DAJc,EAKd,oCALc,EAMd,yCANc,CAAlB;AASA,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,QAAX,CAAoBL,OAApB,EAA6BG,SAA7B,EAAwCL,MAAxC,CAAjB;AAEA,eAAeM,QAAf"},"metadata":{},"sourceType":"module"}