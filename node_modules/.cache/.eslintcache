[{"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/index.js":"1","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/App.js":"2","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/TileFrame.js":"3","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/NftPage.js":"4","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Block.js":"5","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Score.js":"6","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/blockchain/factory.js":"7","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Tile.js":"8","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/blockchain/ethers.js":"9"},{"size":148,"mtime":1657386165513,"results":"10","hashOfConfig":"11"},{"size":12264,"mtime":1666787434216,"results":"12","hashOfConfig":"13"},{"size":2513,"mtime":1657386165513,"results":"14","hashOfConfig":"11"},{"size":11163,"mtime":1657707138062,"results":"15","hashOfConfig":"11"},{"size":6848,"mtime":1662550211898,"results":"16","hashOfConfig":"11"},{"size":7698,"mtime":1657386165512,"results":"17","hashOfConfig":"11"},{"size":631,"mtime":1666180501073,"results":"18","hashOfConfig":"11"},{"size":1598,"mtime":1657386165513,"results":"19","hashOfConfig":"11"},{"size":1190,"mtime":1666786584561,"results":"20","hashOfConfig":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nhitu2",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"27"},"1xhq07b",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/index.js",[],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/App.js",["49","50","51","52","53","54"],[],"import React, {useEffect, useState, useRef} from 'react';\nimport Block from './components/Block.js';\nimport TileFrame from './components/TileFrame.js';\nimport Score from './components/Score.js';\nimport NftPage from './components/NftPage.js';\nimport factory from './blockchain/factory.js';\nimport './css/stylesheet.css';\nimport { ethers } from 'ethers';\nimport Swal from 'sweetalert2';\n\nconst App = () => {\n\n    // connect button\n    const button = useRef();\n\n    // changing current NFT listener\n    const [nftChange, setNftChange] = useState(null);\n    const [nftPage, setNftPage] = useState(false);\n    const [score, setScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [worldHighScore, setWorldHighScore] = useState(0);\n    const [worldHighScoreHolder, setWorldHighScoreHolder] = useState(null);\n    const [ended, setEnded] = useState(true);\n    const [height, setHeight] = useState(100);\n    const [bottom, setBottom] = useState(false);\n    // tile position of first tile of game\n    const [initialTilePos, setInitialTilePos] = useState(0);\n    // tile position of next incoming tile\n    const [firstTilePos, setFirstTilePos] = useState(0);\n    const [gameContract, setGameContract] = useState(null);\n    const [connected, setConnected] = useState(false);\n\n    // reloads the game every new highscore\n    useEffect( () => {\n        if (score !== 0) {\n            loadGame();\n        }\n    }, [highScore])\n\n    // loads game at the start\n    useEffect( () => {\n        loadGame();\n    }, [])\n\n    useEffect( () => {\n        if (!ended) {\n            startGame();\n        }\n    }, [ended]);\n\n    useEffect(() => {\n        if (connected){\n            button.current.innerHTML = \"Disconnect\";\n        }\n        else {\n            button.current.innerHTML = \"Connect to MetaMask\";\n        }\n    }, [connected])\n\n    useEffect(() => {\n        detectAccountChange();\n    }, [])\n\n    // reloads game when a wallet disconnects, account changes, or chain changed\n    const detectAccountChange = () => {\n        window.ethereum.on(\"disconnect\", () => {\n            setConnected(false);\n            loadGame();\n        })\n        window.ethereum.on(\"accountsChanged\", () => {\n            setConnected(false);\n            loadGame();\n          });\n\n        window.ethereum.on(\"chainChanged\", () => {\n            loadGame();\n        })\n    }\n\n    const loadGame = async() => {\n        if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n            let signer;\n            // A Web3Provider wraps a standard Web3 provider, which is\n            // what MetaMask injects as window.ethereum into each page\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n            // MetaMask requires requesting permission to connect users accounts\n            await provider.send(\"eth_requestAccounts\", []);\n\n            // The MetaMask plugin also allows signing transactions to\n            // send ether and pay to change state within the blockchain.\n            // For this, you need the account signer...\n            signer = provider.getSigner()\n\n            if (localStorage.getItem(\"current block\") === null) {\n                // sets nft block to basic block\n                console.log(\"setting local storage to 0\");\n                localStorage.setItem(\"current block\", 0);\n            }\n\n            const chainId = 80001;\n            // Connecting the user to the Mumbai chain if they are not already connected\n            if (window.ethereum.networkVersion !== chainId) {\n                try {\n                    await provider.send('wallet_switchEthereumChain', [{chainId: \"0x\" + chainId.toString(16)}])\n                }\n                catch (err) {\n                    if (err.code === 4902) {\n                        await provider.send('wallet_addEthereumChain', [{chainName: 'Polygon Testnet Mumbai', chainId: \"0x\" + chainId.toString(16), nativeCurrency: { name: 'tMATIC', decimals: 18, symbol: 'tMATIC' }, rpcUrls: ['https://rpc-mumbai.maticvigil.com']}])\n                    } \n                }\n            }\n            if (window.ethereum.isConnected() && window.ethereum.networkVersion === chainId) {\n                const walletAddress = await signer.getAddress();\n                const ERC20_ABI = [\n                    'constructor()',\n                    'function highScore() public view returns (uint256)',\n                    'function mint(string memory tokenURI, uint256 tokenId) public returns (uint256)',\n                    'function setNewHighScore(uint256 newHighScore) external',\n                    'function ownerOf(uint256 tokenId) public view returns (address)'\n                ];\n\n                try {\n                    // checking if the wallet has created its own game smart contract\n                    if (!(await factory.isPlayedBefore(walletAddress))){\n\n                        // Creates account for new user then loads the game again \n                        // On the next reload the user will now have an account\n                        async function newGame() {\n                            const tx = await factory.newJumpingGame();\n                            tx.wait();\n                            setTimeout(function() {\n                                loadGame();\n                            }, 20000)\n                        }\n                        Swal.fire({\n                            title: \"Would you like to create an account to keep track of your scores and NFTs?\",\n                            showCancelButton: true,\n                            confirmButtonText: \"Yup\",\n                        }).then((result) => {\n                            if (result.isConfirmed) {\n                                newGame();\n                            }\n                            else {\n                                // sets default functionality\n                                notConnected();\n                                return;\n                            }\n                        })\n                    } else {\n                        // setting all aspects of smart contract to variables \n                        setConnected(true);\n                        const gameAddress = await factory.playersJumpingGameAddress(walletAddress);\n                        const gameContract = new ethers.Contract(gameAddress, ERC20_ABI, signer);\n                        setGameContract(gameContract);\n                        const tempHighScore = await gameContract.highScore();\n                        setHighScore(ethers.BigNumber.from(tempHighScore).toNumber());\n                        const tempWorldHighScore = await factory.worldHighScore();\n                        setWorldHighScore(ethers.BigNumber.from(tempWorldHighScore).toNumber());\n                        const tempWorldHighScoreHolder = await factory.worldHighScoreHolder()\n                        setWorldHighScoreHolder(ethers.BigNumber.from(tempWorldHighScoreHolder).toHexString());\n                        }\n                }\n                catch(err) {\n                    notConnected();\n                    return;\n                    }\n            }\n            else {\n                notConnected();\n            }\n\n        } \n        else {\n            Swal.fire({\n                title: 'You do not have MetaMask installed',\n                text: `Download MetaMask at https://metamask.io/download/`,\n                icon: 'info',\n            })\n            // If you don't specify a //url//, Ethers connects to the default \n            // (i.e. ``http:/\\/localhost:8545``)\n            notConnected();\n        }\n    }\n\n    const notConnected = () => {\n        setConnected(false);\n        setWorldHighScore(0);\n        setHighScore(0);\n        setWorldHighScoreHolder(\"\"); \n    }\n\n    const startGame = async() => {\n\n        // Creates a countdown then starts the game\n        let countdown, textnode;\n        const timer1 = setTimeout( run, 1000);\n        function run() {\n            countdown = document.createElement(\"div\");\n            countdown.className = \"number\";\n            textnode = document.createTextNode(\"3\");\n            countdown.appendChild(textnode);\n            document.getElementById(\"container\").appendChild(countdown);\n            clearInterval(timer1);\n        }\n        const timer2 = setTimeout( run2, 2000);\n        function run2() {\n            textnode.nodeValue = \"2\";\n            clearInterval(timer2);\n        }\n        const timer3 = setTimeout( run3, 3000);\n        function run3() {\n            textnode.nodeValue = \"1\";\n            \n            clearInterval(timer3);\n        }\n        const start = setTimeout(bot, 4000);\n        function bot() {\n            // triggers the start of the game in TileFram and Block pages\n            setBottom(true);\n            countdown.remove();\n            clearInterval(start);\n        }\n    }\n\n    // Action for the on click button\n    const connectButton = async() => {\n        if (connected) {\n            setScore(0);\n            setConnected(false);\n            setWorldHighScore(0);\n            setHighScore(0);\n            setWorldHighScoreHolder(\"\"); \n        }\n        else {\n            loadGame();\n        }\n    }\n\n    // game page\n    if (!nftPage) {\n        return (\n            <>\n                <div className=\"background\">\n                    <div className=\"bigContainer\">\n                        <button \n                                ref={button} \n                                className=\"ui inverted green button\" \n                                onClick={e => connectButton(e)}>\n                        </button>\n                        <div className=\"reminder\">\n                            Remember that a MetaMask transaction can take up to 30 seconds\n                        </div>\n                        <div className='faucet'>\n                            You can get your TMATIC tokens through this faucet \n                            <a href=\"https://faucet.polygon.technology/\" target=\"_blank\"> HERE</a>\n                        </div>\n                        <div className='testnet'>\n                            Check out the leader on the Mumbai explorer \n                            <a href=\"https://mumbai.polygonscan.com/\" target=\"_blank\"> HERE</a>\n                        </div>\n                        <div className=\"ui container\" id=\"container\">\n                            <Score connected={connected} setHighScore={setHighScore} setWorldHighScore={setWorldHighScore} setWorldHighScoreHolder={setWorldHighScoreHolder} gameContract={gameContract} highScore={highScore} worldHighScore={worldHighScore} worldHighScoreHolder={worldHighScoreHolder} setNftPage={setNftPage} setScore={setScore} setEnded={setEnded} setHeight={setHeight} setBottom={setBottom} score={score} ended={ended} bottom={bottom}/>\n                            <div className=\"floor\"></div>\n                            <TileFrame nftPage={nftPage} bottom={bottom} setInitialTilePos={setInitialTilePos} setFirstTilePos={setFirstTilePos}/>\n                            <Block nftChange={nftChange} score={score} setScore={setScore} setEnded={setEnded} height={height} setHeight={setHeight} bottom={bottom} setBottom={setBottom} initialTilePos={initialTilePos} firstTilePos={firstTilePos}/>\n                        </div>\n                    </div>\n                </div>\n           </>\n        )\n\n        // nft page\n    } else {\n        return (\n            <div className=\"background\">\n                <div className=\"bigContainer\">\n                    <div className=\"reminder\">\n                            Minting an NFT may take up to 30 seconds\n                    </div>\n                    <div className='faucet'>\n                            You can trade your NFTs on  \n                            <a href=\"https://testnets.opensea.io/\" target=\"_blank\"> Opensea!</a>\n                        </div>\n                    <div className=\"ui container\" style={{backgroundColor: \"black\"}}>\n                        <NftPage gameContract={gameContract} setNftPage={setNftPage} highScore={highScore} setNftChange={setNftChange} nftChange={nftChange}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n\n};\n\nexport default App;","/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/TileFrame.js",["55","56"],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/NftPage.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74"],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Block.js",["75","76","77"],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Score.js",["78","79","80","81"],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/blockchain/factory.js",[],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/components/Tile.js",[],[],"/Users/erikmacinnis/Desktop/EthProjects/MaticNFTJumpingGame/src/blockchain/ethers.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":38,"column":8,"nodeType":"84","endLine":38,"endColumn":19,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":43,"column":8,"nodeType":"84","endLine":43,"endColumn":10,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":62,"column":8,"nodeType":"84","endLine":62,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":256,"column":29,"nodeType":"92","messageId":"93","endLine":256,"endColumn":90,"fix":"94"},{"ruleId":"90","severity":1,"message":"91","line":260,"column":29,"nodeType":"92","messageId":"93","endLine":260,"endColumn":87,"fix":"95"},{"ruleId":"90","severity":1,"message":"91","line":283,"column":29,"nodeType":"92","messageId":"93","endLine":283,"endColumn":84,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":35,"nodeType":"99","messageId":"100","endLine":1,"endColumn":43},{"ruleId":"82","severity":1,"message":"101","line":34,"column":8,"nodeType":"84","endLine":34,"endColumn":10,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":1,"column":35,"nodeType":"99","messageId":"100","endLine":1,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":62,"column":33,"nodeType":"106","messageId":"107","endLine":62,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":127,"column":29,"nodeType":"92","endLine":127,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":133,"column":29,"nodeType":"92","endLine":133,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":139,"column":29,"nodeType":"92","endLine":139,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":148,"column":29,"nodeType":"92","endLine":148,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":154,"column":29,"nodeType":"92","endLine":154,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":160,"column":29,"nodeType":"92","endLine":160,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":168,"column":29,"nodeType":"92","endLine":168,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":174,"column":29,"nodeType":"92","endLine":174,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":180,"column":29,"nodeType":"92","endLine":180,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":188,"column":29,"nodeType":"92","endLine":188,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":194,"column":29,"nodeType":"92","endLine":194,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":200,"column":29,"nodeType":"92","endLine":200,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":208,"column":29,"nodeType":"92","endLine":208,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":214,"column":29,"nodeType":"92","endLine":214,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":220,"column":29,"nodeType":"92","endLine":220,"endColumn":50},{"ruleId":"82","severity":1,"message":"110","line":32,"column":8,"nodeType":"84","endLine":32,"endColumn":16,"suggestions":"111"},{"ruleId":"82","severity":1,"message":"112","line":42,"column":8,"nodeType":"84","endLine":42,"endColumn":19,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"109","line":183,"column":13,"nodeType":"92","endLine":183,"endColumn":52},{"ruleId":"97","severity":1,"message":"114","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":2,"column":28,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"97","severity":1,"message":"103","line":2,"column":38,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"82","severity":1,"message":"115","line":18,"column":8,"nodeType":"84","endLine":18,"endColumn":22,"suggestions":"116"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadGame' and 'score'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'loadGame'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'detectAccountChange'. Either include it or remove the dependency array.",["119"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"120","text":"121"},{"range":"122","text":"121"},{"range":"123","text":"121"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setFirstTilePos' and 'setInitialTilePos'. Either include them or remove the dependency array. If 'setInitialTilePos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["124"],"'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'atBottom'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'changeBlock'. Either include it or remove the dependency array.",["126"],"'FixedNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'connected' and 'updateScores'. Either include them or remove the dependency array.",["127"],{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},[10018,10018]," rel=\"noreferrer\"",[10268,10268],[11859,11859],{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [highScore, loadGame, score]",{"range":"142","text":"143"},"Update the dependencies array to be: [loadGame]",{"range":"144","text":"145"},"Update the dependencies array to be: [detectAccountChange]",{"range":"146","text":"147"},"Update the dependencies array to be: [setFirstTilePos, setInitialTilePos]",{"range":"148","text":"149"},"Update the dependencies array to be: [atBottom, bottom]",{"range":"150","text":"151"},"Update the dependencies array to be: [changeBlock, nftChange]",{"range":"152","text":"153"},"Update the dependencies array to be: [score, ended, connected, updateScores]",{"range":"154","text":"155"},[1429,1440],"[highScore, loadGame, score]",[1524,1526],"[loadGame]",[1904,1906],"[detectAccountChange]",[1248,1250],"[setFirstTilePos, setInitialTilePos]",[1224,1232],"[atBottom, bottom]",[1396,1407],"[changeBlock, nftChange]",[625,639],"[score, ended, connected, updateScores]"]